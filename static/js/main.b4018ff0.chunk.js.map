{"version":3,"sources":["Contexts/AppContext/generateCrossWord2.js","Contexts/AppContext/index.js","Components/App/style.js","Components/Dashboard/style.js","Components/Dashboard/index.js","Components/GraphOutput/style.js","Components/GraphOutput/index.js","Components/Bookmarks/style.js","Components/Bookmarks/index.js","Components/Homepage/style.js","Components/Homepage/index.js","Components/Settings/style.js","Components/Settings/index.js","Components/HamMenu/style.js","Components/HamMenu/index.js","Components/App/index.js","index.js"],"names":["Position","x","y","toString","generateCrossWord2","words","config","pushGraphCallback","length","starts","wordIndex","letterIndex","letters","graph","Map","boundaries","minX","undefined","maxX","minY","maxY","updateBoundaries","letter","checkCollision","index","xOffset","yOffset","direction","i","currentLetter","currentX","currentY","currentPosition","graphCase","topPos","leftPos","bottomPos","rightPos","get","has","push","position","removeWord","resetBoundaries","forEach","value","delete","findLetters","startGraph","isNew","current","j","unaivailableChars","newLetters","set","pop","AppContext","React","createContext","NAMES_STORAGE_KEY","GRAPHS_STORAGE_KEY","OFFSETS_STORAGE_KEY","LASTCONFIG_STORAGE_KEY","FAVORITE_STORAGE_KEY","AppProvider","props","useState","names","setNames","graphs","setGraphs","offsets","setOffsets","lastConfig","setLastConfig","favorites","setFavorites","useEffect","namesItem","localStorage","getItem","graphsItem","offsetsItem","lastConfigItem","favoritesItem","JSON","parse","offset","max","goSmooth","setItem","stringify","console","log","generateGraph","intention","prev","Math","newGraphs","graphUuid","stringifiedLetters","favId","findIndex","id","uuidV4","width","height","favorite","addFavorite","graphIndex","find","copyGraph","show","map","removeFavorite","graphId","filter","update","$set","Provider","children","AppContainer","styled","div","DashboardContainer","showDashboard","CURRENT_NAMES_STORAGE_KEY","NAME_MODE_STORAGE_KEY","Dashboard","useContext","currentNames","setCurrentNames","nameMode","setNameMode","setShowDashboard","nameRef","useRef","currentNamesItem","nameModeItem","mode","cancelClick","onDrop","event","where","target","dataTransfer","getData","toLowerCase","focus","copy","splice","onDragOver","preventDefault","className","onClick","ref","onKeyDown","e","key","trimmed","trim","toUpperCase","placeholder","name","NameIcon","CgClose","MdEdit","BiMove","onDragStart","setData","onDoubleClick","draggable","applyIcon","randomIndex","floor","random","tmp","GraphsContainer","Graph","widthC","heightC","surplue","Character","p","yPos","xPos","GraphElement","bookmarked","scrollRef","favoriteGraph","surplueValue","setSurplueValue","graphRef","rescaleGraph","axis","bigAxis","window","innerWidth","clientWidth","clientHeight","addEventListener","removeEventListener","GraphOutput","seeNextRef","seePrevRef","graphsScrollRef","scrollIntoView","behavior","minGraphs","getMinGraphs","BookmarksContainer","Bookmarks","namesArr","ShowEyeTag","AiFillEye","AiFillEyeInvisible","v","id2","HomepageContainer","Homepage","SettingsContainer","Menu","Settings","allContext","graphLimitRef","type","defaultValue","min","HamMenuContainer","HamMenu","onClose","menuState","menuClick","setShowSettings","menus","menu","showMenu","InnerApp","showSettings","showHamMenu","setShowHamMenu","component","setMenuState","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b4018ff0.chunk.js","sourcesContent":["\r\nconst Position = (x, y) => {\r\n    return x.toString() + ',' + y.toString();\r\n}\r\n\r\nconst generateCrossWord2= (words, config, pushGraphCallback) => {\r\n    if (!words.length || (config\r\n        && config.starts.length === words.length\r\n        && config.starts[words.length - 1].wordIndex === words[words.length - 1].length - 1\r\n        && config.starts[words.length - 1].letterIndex === config.starts[words.length - 1].letters.length - 1\r\n    ))\r\n        return true;\r\n\r\n    if (!config)\r\n        config =  { starts: [] };\r\n\r\n    const graph = new Map(config.graph);\r\n    const boundaries = config.boundaries ?? {\r\n        minX: undefined,\r\n        maxX: undefined,\r\n        minY: undefined,\r\n        maxY: undefined\r\n    };\r\n\r\n    const updateBoundaries = (letter) => {\r\n        if (!boundaries.minX || letter.x <= boundaries.minX.x)\r\n            boundaries.minX = letter;\r\n        if (!boundaries.maxX || letter.x >= boundaries.maxX.x)\r\n            boundaries.maxX = letter;\r\n        if (!boundaries.minY || letter.y <= boundaries.minY.y)\r\n            boundaries.minY = letter;\r\n        if (!boundaries.maxY || letter.y >= boundaries.maxY.y)\r\n            boundaries.maxY = letter;\r\n    }\r\n\r\n    const resetBoundaries = (index) => {\r\n        if (boundaries.minX && boundaries.minX.wordIndex === index)\r\n            boundaries.minX = null;\r\n        if (boundaries.maxX && boundaries.maxX.wordIndex === index)\r\n            boundaries.maxX = null;\r\n        if (boundaries.minY && boundaries.minY.wordIndex === index)\r\n            boundaries.minY = null;\r\n        if (boundaries.maxY && boundaries.maxY.wordIndex === index)\r\n            boundaries.maxY = null;\r\n    }\r\n\r\n    const checkCollision = (index, xOffset, yOffset, direction) => {\r\n        const letters = [];\r\n\r\n        for (let i = 0; i < words[index].length; ++i) {\r\n            const currentLetter = words[index][i];\r\n            const currentX = xOffset + (i * !direction);\r\n            const currentY = yOffset + (i * direction);\r\n            const currentPosition = Position(currentX, currentY);\r\n\r\n            let graphCase = undefined;\r\n\r\n            if (index > 0) {\r\n                const topPos = Position(currentX, currentY - 1);\r\n                const leftPos = Position(currentX - 1, currentY);\r\n                const bottomPos = Position(currentX, currentY + 1);\r\n                const rightPos = Position(currentX + 1, currentY);\r\n\r\n                graphCase = graph.get(currentPosition);\r\n\r\n                if (graphCase && (graphCase.letter !== currentLetter || graphCase.direction === direction))\r\n                    return null;\r\n                else if (i === 0 && graphCase) {\r\n                    if (!direction && graph.has(leftPos))\r\n                        return null;\r\n                    if (direction && graph.has(topPos))\r\n                        return null;\r\n                }\r\n                else if (i === words[index].length - 1 && graphCase) {\r\n                    if (!direction && graph.has(rightPos))\r\n                        return null;\r\n                    else if (direction && graph.has(bottomPos))\r\n                        return null;\r\n                }\r\n                else if (!graphCase) {\r\n                    // check for top case\r\n                    if ((!direction || i === 0) && graph.has(topPos))\r\n                        return null;\r\n                    // check for down case\r\n                    else if ((!direction || i === words[index].length - 1) && graph.has(bottomPos))\r\n                        return null;\r\n                    // check for left case\r\n                    else if ((direction || i === 0) && graph.has(leftPos))\r\n                        return null;\r\n                    // check for right case\r\n                    else if ((direction || i === words[index].length - 1) && graph.has(rightPos))\r\n                        return null;\r\n                }\r\n            }\r\n\r\n            if (!graphCase) {\r\n                letters.push({\r\n                    letter: currentLetter,\r\n                    position: currentPosition,\r\n                    wordIndex: index,\r\n                    direction: direction,\r\n                    x: currentX,\r\n                    y: currentY\r\n                });\r\n            }\r\n        }\r\n        return letters;\r\n    }\r\n\r\n    const placeWord = (letters) => {\r\n        letters.forEach(letter => {\r\n            updateBoundaries(letter);\r\n            graph.set(letter.position, letter);\r\n        });\r\n    }\r\n\r\n    const removeWord = (index) => {\r\n        resetBoundaries(index);\r\n        graph.forEach(value => {\r\n            if (value.wordIndex === index) {\r\n                graph.delete(value.position);\r\n            }\r\n            else\r\n                updateBoundaries(value);\r\n        });\r\n    }\r\n\r\n    const findLetters = (letter) => {\r\n        const letters = [];\r\n\r\n        graph.forEach(value => {\r\n            if (value.letter === letter)\r\n                letters.push(value);\r\n        });\r\n        return letters;\r\n    }\r\n\r\n    const startGraph = (index, starts) => {\r\n        let isNew = (index >= starts.length ? true : false);\r\n\r\n        let current = !isNew ? starts[index] : {\r\n            i: 0,\r\n            j: 0,\r\n            letters: [],\r\n            unaivailableChars: {}\r\n        };\r\n\r\n        if (isNew)\r\n            starts.push(current);\r\n\r\n        for (; current.i < words[index].length; ++current.i) {\r\n            if (isNew) {\r\n                if (current.unaivailableChars[words[index][current.i]])\r\n                    continue;\r\n    \r\n                current.letters = (index === 0 ? [] : findLetters(words[index][current.i]));\r\n                \r\n                if (index !== 0 && !current.letters.length) {\r\n                    current.unaivailableChars[words[index][current.i]] = true;\r\n                    continue;\r\n                }\r\n\r\n                current.j = 0;\r\n            }\r\n            for (; index === 0 || current.j < current.letters.length; ++current.j) {\r\n                if (isNew) {\r\n                    let direction = 0;\r\n                    let xOffset = 0;\r\n                    let yOffset = 0;\r\n        \r\n                    if (index > 0) {\r\n                        direction = !current.letters[current.j].direction;\r\n                        xOffset = current.letters[current.j].x - (current.i * !direction);\r\n                        yOffset = current.letters[current.j].y - (current.i * direction);\r\n                    }\r\n        \r\n                    const newLetters = checkCollision(index, xOffset, yOffset, direction);\r\n                    if (!newLetters)\r\n                        continue;\r\n                    \r\n                    // place word in graph\r\n                    placeWord(newLetters);\r\n                }\r\n\r\n                if (index === words.length - 1) {\r\n                    if (isNew) {\r\n                        if (!pushGraphCallback({\r\n                            graph: graph,\r\n                            boundaries: {...boundaries},\r\n                            starts: starts\r\n                        }))\r\n                            return false;\r\n                    }\r\n                }\r\n                else {\r\n                    if (!startGraph(index + 1, starts))\r\n                        return false;\r\n                    starts.pop();\r\n                    if (index === 0)\r\n                        break;\r\n                }\r\n                \r\n                // remove current word from graph\r\n                removeWord(index);\r\n\r\n                if (index === 0)\r\n                    break;\r\n                isNew = true;\r\n            }\r\n            if (index === 0)\r\n                break;\r\n        }\r\n        return true;\r\n    }\r\n\r\n    if (startGraph(0, config.starts))\r\n        return true;\r\n    return false;\r\n}\r\n\r\nexport default generateCrossWord2;","import React from 'react';\r\nimport { v4 as uuidV4 } from 'uuid';\r\nimport update from 'immutability-helper';\r\n\r\nimport generateCrossWord2 from './generateCrossWord2';\r\n\r\nexport const AppContext = React.createContext();\r\n\r\nconst NAMES_STORAGE_KEY = 'names';\r\nconst GRAPHS_STORAGE_KEY = 'graphs';\r\nconst OFFSETS_STORAGE_KEY = 'offsets';\r\nconst LASTCONFIG_STORAGE_KEY = 'lastconfig';\r\nconst FAVORITE_STORAGE_KEY = \"favorites\";\r\n\r\nexport const AppProvider = props => {\r\n    const [ names, setNames ] = React.useState([]);\r\n    const [ graphs, setGraphs ] = React.useState([]);\r\n    const [ offsets, setOffsets ] = React.useState({});\r\n    const [ lastConfig, setLastConfig ] = React.useState(null);\r\n    const [ favorites, setFavorites ] = React.useState({});\r\n\r\n    React.useEffect(() => {\r\n        const namesItem = localStorage.getItem(NAMES_STORAGE_KEY);\r\n        const graphsItem = localStorage.getItem(GRAPHS_STORAGE_KEY);\r\n        const offsetsItem = localStorage.getItem(OFFSETS_STORAGE_KEY);\r\n        const lastConfigItem = localStorage.getItem(LASTCONFIG_STORAGE_KEY);\r\n        const favoritesItem = localStorage.getItem(FAVORITE_STORAGE_KEY);\r\n\r\n        setNames(JSON.parse(namesItem) ?? []);\r\n        setOffsets(JSON.parse(offsetsItem) ?? {  \r\n            offset: 0,\r\n            max: 10,\r\n            goSmooth: 0\r\n        });\r\n        setGraphs(JSON.parse(graphsItem) ?? []);\r\n        setFavorites(JSON.parse(favoritesItem) ?? {\r\n            names: [],\r\n            graphs: []\r\n        });\r\n        setLastConfig(JSON.parse(lastConfigItem));\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        localStorage.setItem(NAMES_STORAGE_KEY, JSON.stringify(names));\r\n    }, [names]);\r\n\r\n    React.useEffect(() => {\r\n        localStorage.setItem(GRAPHS_STORAGE_KEY, JSON.stringify(graphs));\r\n    }, [graphs]);\r\n\r\n    React.useEffect(() => {\r\n        localStorage.setItem(LASTCONFIG_STORAGE_KEY, JSON.stringify(lastConfig));\r\n    }, [lastConfig]);\r\n\r\n    React.useEffect(() => {\r\n        localStorage.setItem(OFFSETS_STORAGE_KEY, JSON.stringify(offsets));\r\n        console.log(offsets);\r\n    }, [offsets]);\r\n\r\n    React.useEffect(() => {\r\n        localStorage.setItem(FAVORITE_STORAGE_KEY, JSON.stringify(favorites));\r\n    }, [favorites]);\r\n\r\n    const generateGraph = (words, intention) => {\r\n        console.log(`intention: ${intention}`);\r\n        if (intention === -1 || (intention === 1 && offsets.offset + offsets.max < graphs.length)) {\r\n            setOffsets(prev => ({\r\n                offset: Math.max(0, prev.offset + prev.max * intention),\r\n                max: prev.max,\r\n                goSmooth: intention === 1 ? 1 : 0\r\n            }));\r\n            return;\r\n        }\r\n        else if (!intention && !words.length) {\r\n            setLastConfig(null);\r\n            setGraphs([]);\r\n            setOffsets(prev => ({\r\n                offset: 0,\r\n                max: prev.max,\r\n                goSmooth: 0\r\n            }));\r\n            return;\r\n        }\r\n\r\n        const currentConfig = (!intention ? null : lastConfig);\r\n        const newGraphs = [];\r\n\r\n        const ret = generateCrossWord2(words, currentConfig, (config) => {\r\n            const letters = [];\r\n            config.graph.forEach(value => {\r\n                letters.push({\r\n                    x: value.x,\r\n                    y: value.y,\r\n                    index: value.wordIndex,\r\n                    letter: value.letter\r\n                });\r\n            });\r\n            const stringifiedLetters = JSON.stringify(letters);\r\n\r\n            const favId = favorites.graphs.findIndex(value => value.stringifiedLetters === stringifiedLetters);\r\n            let graphUuid;\r\n            if (favId !== -1)\r\n                graphUuid = favorites.graphs[favId].id;\r\n            else\r\n                graphUuid = uuidV4();\r\n\r\n            newGraphs.push({\r\n                id: graphUuid,\r\n                names: JSON.stringify(words),\r\n                width: config.boundaries.maxX.x - config.boundaries.minX.x,\r\n                height: config.boundaries.maxY.y - config.boundaries.minY.y,\r\n                xOffset: config.boundaries.minX.x,\r\n                yOffset: config.boundaries.minY.y,\r\n                letters: letters,\r\n                stringifiedLetters: stringifiedLetters,\r\n                favorite: favId === -1 ? false : true\r\n            });\r\n\r\n            if (newGraphs.length === offsets.max) {\r\n                setLastConfig(config);\r\n                return false;\r\n            }\r\n\r\n            return true;\r\n        });\r\n\r\n        if (ret)\r\n            setLastConfig(null);\r\n\r\n        if (newGraphs.length) {\r\n            if (!intention)\r\n                setGraphs(newGraphs);\r\n            else\r\n                setGraphs([...graphs, ...newGraphs]);\r\n            setOffsets(prev => ({\r\n                offset: (prev.offset + prev.max) * intention,\r\n                max: prev.max,\r\n                goSmooth: -1\r\n            }));\r\n        }\r\n    }\r\n\r\n    const addFavorite = (graphIndex) => {\r\n        const graph = graphs[graphIndex];\r\n\r\n        if (favorites.graphs.find(value => value.stringifiedLetters === graph.stringifiedLetters))\r\n            return;\r\n\r\n        const copyGraph = {...graph};\r\n        copyGraph.letters = [...graph.letters];\r\n\r\n        setFavorites(prev => ({\r\n            names: (!prev.names.find(value => value.names === graph.names)\r\n                ? [...prev.names, {\r\n                    names: graph.names,\r\n                    show: true\r\n                }]\r\n                : prev.names\r\n            ),\r\n            graphs: [...prev.graphs, copyGraph]\r\n        }));\r\n\r\n        copyGraph.favorite = true;\r\n\r\n        setGraphs(prev => prev.map(value => value.id === graph.id ? copyGraph : value));\r\n    }\r\n\r\n    const removeFavorite = (graphId) => {\r\n        const graphIndex = graphs.findIndex(value => value.id === graphId);\r\n\r\n        setFavorites(prev => ({\r\n            names: prev.names,\r\n            graphs: prev.graphs.filter(value => value.id !== graphId)\r\n        }));\r\n\r\n        if (graphIndex !== -1) {\r\n            setGraphs(prev => update(prev, {\r\n                [graphIndex]: {\r\n                    favorite: {\r\n                        $set: false\r\n                    }\r\n                }\r\n            }));\r\n        }\r\n    }\r\n\r\n    const value = {\r\n        names, setNames,\r\n        graphs, setGraphs,\r\n        offsets, setOffsets,\r\n        lastConfig, setLastConfig,\r\n        generateGraph,\r\n        favorites, setFavorites, addFavorite, removeFavorite\r\n    };\r\n\r\n    return (\r\n        <AppContext.Provider value={value}>\r\n            {props.children}\r\n        </AppContext.Provider>\r\n    );\r\n}","import styled from 'styled-components';\r\n\r\nexport const AppContainer = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow: hidden;\r\n    height: 100%;\r\n    /* padding: 50px; */\r\n    padding-top: 0px;\r\n    margin: 0px;\r\n\r\n    background-color: #23232F;\r\n\r\n    .padded {\r\n        /* flex: 1 1 auto; */\r\n        height: calc(100% - 100px);\r\n        margin: 50px;\r\n\r\n        overflow: hidden;\r\n\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        @media only screen and (max-width: 1000px) {\r\n            /* margin: 10px; */\r\n            margin-left: 10px;\r\n            margin-right: 10px;\r\n        }\r\n\r\n        @media only screen and (min-width: 600px) {\r\n            .mobile-scrollable {\r\n                flex: 1 1 auto;\r\n                display: flex;\r\n                flex-direction: column;\r\n                overflow: hidden;\r\n            }\r\n        }\r\n        @media only screen and (max-width: 600px) {\r\n            margin: 10px;\r\n\r\n            .mobile-scrollable {\r\n                overflow: hidden;\r\n                overflow-y: scroll;\r\n\r\n                ::-webkit-scrollbar {\r\n                    width: 5px;\r\n                }\r\n            \r\n                ::-webkit-scrollbar-track {\r\n                    background-color: transparent;\r\n                }\r\n            \r\n                ::-webkit-scrollbar-thumb {\r\n                    background-color: var(--dark2);\r\n                    border-radius: 10px;\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    .title-container {\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n\r\n        font-size: 30px;\r\n\r\n        color: var(--white);\r\n\r\n        padding: 10px;\r\n        padding-left: 30px;\r\n        padding-right: 30px;\r\n        border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n        /* margin-bottom: 1em; */\r\n    }\r\n\r\n    .menu-selector {\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n\r\n        font-size: 20px;\r\n\r\n        z-index: 0;\r\n        /* box-shadow: 0px 0px 20px rgba(0, 0, 0, 0.3); */\r\n        margin-top: 5px;\r\n\r\n        @media only screen and (max-width: 700px) {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    .menu-hamburger {\r\n        display: none;\r\n\r\n        @media only screen and (max-width: 700px) {\r\n            display: flex;\r\n        }\r\n    }\r\n\r\n    .menu-selector .icon {\r\n        cursor: pointer;\r\n        font-weight: bold;\r\n        margin: 2px;\r\n        padding: 15px;\r\n        margin-left: 20px;\r\n        border-radius: 10px;\r\n\r\n        transition: all 0.1s linear;\r\n\r\n        :hover {\r\n            background-color: rgba(255, 255, 255, 0.2);\r\n        }\r\n    }\r\n\r\n    .menu-selector .settings, .menu-hamburger .ham-icon {\r\n        cursor: pointer;\r\n        font-size: 30px;\r\n        margin-left: 20px;\r\n\r\n        transition: all 0.1s linear;\r\n\r\n        /* :hover {\r\n            transform: scaleX(1.5) scaleY(0.9);\r\n        } */\r\n\r\n        :active {\r\n            transform: scaleY(1.5);\r\n        }\r\n    }\r\n\r\n    .menu-selector .selected {\r\n        background-color: var(--white);\r\n        color: var(--dark);\r\n        box-shadow: 0px -5px 0px var(--blue) inset;\r\n\r\n        :hover {\r\n            background-color: var(--white);\r\n        }\r\n    }\r\n\r\n    .title {\r\n        cursor: pointer;\r\n        font-weight: bold;\r\n\r\n        margin-top: 0px;\r\n        margin-bottom: 0px;\r\n    }\r\n`;","import styled from 'styled-components';\r\n\r\nexport const DashboardContainer = styled.div`\r\n    flex: 0 1 auto;\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    margin-left: 100px;\r\n    margin-right: 100px;\r\n\r\n    @media only screen and (max-width: 900px) {\r\n        margin-left: 50px;\r\n        margin-right: 50px;\r\n    }\r\n\r\n    @media only screen and (max-width: 600px) {\r\n        margin-left: 5px;\r\n        margin-right: 5px;\r\n        margin-bottom: 10px;\r\n    }\r\n\r\n    .hide-container {\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: flex-end;\r\n        color: var(--white);\r\n        font-size: 20px;\r\n\r\n        p {\r\n            padding: 0px;\r\n            margin: 0px;\r\n            margin-right: 5px;\r\n            font-size: 15px;\r\n        }\r\n\r\n        @media only screen and (min-width: 600px) {\r\n            display: none;\r\n        }\r\n    }\r\n\r\n    .inputs {\r\n        display: ${props => props.showDashboard ? \"flex\" : \"none\"};\r\n        flex-direction: row;\r\n        padding: 5px;\r\n\r\n        @media only screen and (max-width: 600px) {\r\n            flex-direction: column;\r\n        }\r\n    }\r\n\r\n    .fields {\r\n        flex: 1 1 auto;\r\n        display: flex;\r\n        flex-direction: column;\r\n        overflow: hidden;\r\n        /* width: 100%; */\r\n        margin-right: 10px;\r\n        padding: 15px;\r\n\r\n        background-color: var(--dark2);\r\n        border-radius: 10px;\r\n\r\n        @media only screen and (max-width: 600px) {\r\n            margin-right: 0px;\r\n            margin-bottom: 10px;\r\n        }\r\n    }\r\n\r\n    .name-input {\r\n        flex: 1 1 auto;\r\n        outline: none;\r\n        /* border: 3px var(--green) solid; */\r\n        border: none;\r\n        border-bottom: 2px solid rgba(0, 0, 0, 0.1);\r\n        background-color: transparent;\r\n        color: var(--white);\r\n\r\n        font-size: 20px;\r\n        font-family: inherit;\r\n    }\r\n\r\n    .name-input::placeholder {\r\n        color: rgba(255, 255, 255, 0.5);\r\n    }\r\n\r\n    .buttons {\r\n        display: flex;\r\n        flex-direction: column;\r\n\r\n        color: var(--white);\r\n        padding-left: 10px;\r\n\r\n        p {\r\n            cursor: pointer;\r\n            padding: 0px;\r\n            margin: 0px;\r\n            outline: none;\r\n            -webkit-tap-highlight-color: transparent;\r\n\r\n            :hover {\r\n                text-decoration: underline;\r\n            }\r\n        }\r\n\r\n        @media only screen and (max-width: 600px) {\r\n            align-self: stretch;\r\n            flex-direction: row;\r\n            justify-content: space-evenly;\r\n            padding-left: 0px;\r\n            padding-top: 10px;\r\n        }\r\n    }\r\n\r\n    .generate-button {\r\n        /* flex: 1 1 auto; */\r\n        cursor: pointer;\r\n        outline: none;\r\n        -webkit-tap-highlight-color: transparent;\r\n        \r\n        font-family: inherit;\r\n        font-size: 25px;\r\n        font-weight: bold;\r\n        \r\n        background-color: var(--blue);\r\n        color: var(--white);\r\n\r\n        border: none;\r\n        border-radius: 10px;\r\n        padding: 10px;\r\n\r\n        transition: all 0.1s linear;\r\n    }\r\n\r\n    @media only screen and (min-width: 600px) {\r\n        .generate-button:hover {\r\n            transform: scale(1.05);\r\n        }\r\n\r\n        .generate-button:active {\r\n            transform: scale(1.0);\r\n        }\r\n    }\r\n\r\n    @media only screen and (max-width: 600px) {\r\n        .generate-button:active {\r\n            transform: scale(1.1);\r\n        }\r\n    }\r\n\r\n    .names-container {\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n\r\n        overflow: hidden;\r\n\r\n        @media only screen and (max-width: 600px) {\r\n            flex-direction: column;\r\n            align-items: flex-start;\r\n        }\r\n    }\r\n\r\n    .names {\r\n        flex: 1 1 auto;\r\n        display: flex;\r\n        flex-direction: row;\r\n        width: 100%;\r\n        overflow: hidden;\r\n        overflow-x: scroll;\r\n    }\r\n\r\n    .names::-webkit-scrollbar {\r\n        height: 5px;\r\n\r\n        @media only screen and (max-width: 600px) {\r\n            height: 2px;\r\n        }\r\n    }\r\n\r\n    .names::-webkit-scrollbar-track {\r\n        background-color: transparent;\r\n    }\r\n\r\n    .names::-webkit-scrollbar-thumb {\r\n        background-color: var(--scrollbar-thumb);\r\n        border-radius: 10px;\r\n    }\r\n\r\n    .one-name-around {\r\n        margin: 10px;\r\n        margin-left: 0px;\r\n        padding: 10px;\r\n        font-size: 20px;\r\n    }\r\n\r\n    .one-name {\r\n        cursor: move;\r\n        display: flex;\r\n        align-items: flex-end;\r\n\r\n        color: var(--white);\r\n        background-color: var(--dark);\r\n\r\n        border-radius: 10px;\r\n\r\n        transition: all 0.1s linear;\r\n    }\r\n\r\n    .no-name {\r\n        color: white;\r\n        margin: 0px;\r\n        padding-left: 0px;\r\n        font-size: 100%;\r\n        white-space: nowrap;\r\n    }\r\n\r\n    .one-name p {\r\n        margin: 0px;\r\n        margin-right: 5px;\r\n    }\r\n\r\n    .close-icon {\r\n        cursor: pointer;\r\n        font-size: 25px;\r\n        transition: all 0.1s linear;\r\n    }\r\n\r\n    @media only screen and (min-width: 600px) {\r\n        .one-name:hover {\r\n            background-color: var(--red);\r\n        }\r\n\r\n        .one-name:hover .close-icon {\r\n            transform: scale(1.1);\r\n        }\r\n    }\r\n\r\n    .one-name-mode {\r\n        background-color: var(--green);\r\n    }\r\n\r\n`;","import React from 'react';\r\nimport update from 'immutability-helper';\r\n\r\nimport { CgClose } from 'react-icons/cg';\r\nimport { MdEdit } from 'react-icons/md';\r\nimport { BiMove } from 'react-icons/bi';\r\nimport { IoIosArrowDown, IoIosArrowUp } from 'react-icons/io';\r\n\r\nimport {\r\n    DashboardContainer\r\n} from './style';\r\n\r\nimport { AppContext } from '../../Contexts/AppContext';\r\n\r\nconst CURRENT_NAMES_STORAGE_KEY = \"currentnames\";\r\nconst NAME_MODE_STORAGE_KEY = \"nameMode\";\r\n\r\nconst Dashboard = () => {\r\n    const {\r\n        names, setNames, generateGraph\r\n     } = React.useContext(AppContext);\r\n\r\n    const [ currentNames, setCurrentNames ] = React.useState([]);\r\n    const [ nameMode, setNameMode ] = React.useState({});\r\n    const [ showDashboard, setShowDashboard ] = React.useState(true);\r\n\r\n    const nameRef = React.useRef();\r\n    \r\n    React.useEffect(() => {\r\n        const currentNamesItem = localStorage.getItem(CURRENT_NAMES_STORAGE_KEY);\r\n        const nameModeItem = localStorage.getItem(NAME_MODE_STORAGE_KEY);\r\n\r\n        setCurrentNames(JSON.parse(currentNamesItem) ?? []);\r\n        setNameMode(JSON.parse(nameModeItem) ?? {\r\n            id: -1,\r\n            mode: \"close\"\r\n        });\r\n    }, []);\r\n\r\n    React.useEffect(() => {\r\n        localStorage.setItem(CURRENT_NAMES_STORAGE_KEY, JSON.stringify(currentNames));\r\n    }, [currentNames]);\r\n\r\n    React.useEffect(() => {\r\n        localStorage.setItem(NAME_MODE_STORAGE_KEY, JSON.stringify(nameMode));\r\n    }, [nameMode]);\r\n\r\n    const onKeyDown = (e) => {\r\n        if (e.key !== \" \" && e.key !== \"Enter\")\r\n            return;\r\n        const trimmed = nameRef.current.value.trim();\r\n        nameRef.current.value = \"\";\r\n        e.preventDefault();\r\n\r\n        if (trimmed.length === 0)\r\n            return;\r\n        setCurrentNames(prev => [...prev, trimmed.toUpperCase()]);\r\n    }\r\n\r\n    let cancelClick = false;\r\n    const applyIcon = (id) => {\r\n        if (nameMode.id === id && nameMode.mode === \"edit\") {\r\n            setCurrentNames(prev => update(prev, {\r\n                    [id]: {\r\n                        $set: nameRef.current.value\r\n                    }\r\n                })\r\n            );\r\n            setNameMode({ id: -1 });\r\n        }\r\n        else {\r\n            setCurrentNames(prev => {\r\n                const copy = [...prev];\r\n                copy.splice(id, 1);\r\n                return copy;   \r\n            });\r\n            setNameMode({ id: -1 });\r\n            cancelClick = true;\r\n        }\r\n    }\r\n\r\n    const onDoubleClick = (id) => {\r\n        if (nameMode.id === id && nameMode.mode === \"edit\") {\r\n            nameRef.current.value = \"\";\r\n            setNameMode({ id: -1 });\r\n        }\r\n        else {\r\n            nameRef.current.value = currentNames[id].toLowerCase();\r\n            setNameMode({\r\n                id: id,\r\n                mode: \"edit\"\r\n            });\r\n        }\r\n    }\r\n\r\n    const onClick = (id) => {\r\n        if (cancelClick) {\r\n            cancelClick = false;\r\n            return;\r\n        }\r\n    \r\n        if (nameMode.id === id && (nameMode.mode === \"move\" || nameMode.mode === \"remove\"))\r\n            setNameMode({ id: -1 });\r\n        else if (nameMode.id === -1) {\r\n            setNameMode({\r\n                id: id,\r\n                mode: \"move\"\r\n            });\r\n        }\r\n        else if (nameMode.mode === \"move\") {\r\n            setCurrentNames(prev => {\r\n                const copy = [...prev];\r\n                copy.splice(nameMode.id, 1);\r\n                copy.splice(id, 0, prev[nameMode.id]);\r\n                return copy;\r\n            });\r\n            setNameMode({ id: -1 });\r\n        }\r\n    }\r\n\r\n    const onDrop = (event, where, target) => {\r\n        const id = event.dataTransfer.getData(\"nameid\");\r\n\r\n        if (where === \"input\") {\r\n            nameRef.current.value = currentNames[id].toLowerCase();\r\n            nameRef.current.focus();\r\n        }\r\n        else if (where === \"name\" && id !== target) {\r\n            setCurrentNames(prev => {\r\n                const copy = [...prev];\r\n                copy.splice(id, 1);\r\n                copy.splice(target, 0, prev[id]);\r\n                return copy;\r\n            });\r\n        }\r\n    }\r\n\r\n    const onDragStart = (event, id) => {\r\n        event.dataTransfer.setData(\"nameid\", id);\r\n    }\r\n\r\n    const onDragOver = (event) => event.preventDefault();\r\n\r\n    const randomOrder = () => {\r\n        const copy = [...currentNames];\r\n\r\n        for (let i = 0; i < copy.length; ++i) {\r\n            const randomIndex = Math.floor(Math.random() * copy.length);\r\n            const tmp = copy[randomIndex];\r\n\r\n            copy[randomIndex] = copy[i];\r\n            copy[i] = tmp;\r\n        }\r\n        setCurrentNames(copy);\r\n        setNameMode({ id: -1 });\r\n    }\r\n\r\n    const clearNames = () => {\r\n        setCurrentNames([]);\r\n        setNameMode({ id: -1 });\r\n    }\r\n\r\n    const startGeneration = () => {\r\n        setNames(prev => currentNames);\r\n        generateGraph(currentNames, 0);\r\n    }\r\n\r\n    return (\r\n        <DashboardContainer showDashboard={showDashboard}>\r\n            <div className=\"hide-container\" onClick={() => setShowDashboard(!showDashboard)}>\r\n                <p>{ showDashboard ? \"Hide\" : \"Show\" } dashboard</p>\r\n                { showDashboard ? <IoIosArrowDown /> : <IoIosArrowUp /> }\r\n            </div>\r\n            <div className=\"inputs\">\r\n                <div className=\"fields\">\r\n                    <input\r\n                        ref={nameRef}\r\n                        className=\"name-input\"\r\n                        onKeyDown={onKeyDown}\r\n                        onDrop={(event) => onDrop(event, \"input\")}\r\n                        onDragOver={onDragOver}\r\n                        placeholder=\"Enter a word...\"\r\n                    />\r\n                    <div className=\"names-container\">\r\n                        <div className=\"names\">\r\n                            { currentNames.length\r\n                                ? currentNames.map((name, id) => {\r\n                                    let NameIcon = CgClose;\r\n                                    if (nameMode.id === id) {\r\n                                        if (nameMode.mode === \"edit\")\r\n                                            NameIcon = MdEdit;\r\n                                        else if (nameMode.mode === \"move\")\r\n                                            NameIcon = BiMove;\r\n                                    }\r\n\r\n                                    return (\r\n                                        <div\r\n                                            key={id}\r\n                                            className={`one-name one-name-around ${id === nameMode.id && `one-name-mode`}`}\r\n                                            onDragStart={(event) => onDragStart(event, id)}\r\n                                            onDrop={(event) => onDrop(event, \"name\", id)}\r\n                                            onDragOver={onDragOver}\r\n                                            onDoubleClick={() => onDoubleClick(id)}\r\n                                            onClick={() => onClick(id)}\r\n                                            draggable\r\n                                        >\r\n                                            <p>{name.toLowerCase()}</p>\r\n                                            <NameIcon className=\"close-icon\" onClick={() => applyIcon(id)} />\r\n                                        </div>\r\n                                    );\r\n                                })\r\n                                : <p className=\"one-name-around no-name\">There are no names. Add names by using the text field above.</p>\r\n                            }\r\n                        </div>\r\n                        <div className=\"buttons\">\r\n                            <p onClick={randomOrder}>Randomize</p>\r\n                            <p onClick={clearNames}>Clear All</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button className=\"generate-button\" onClick={startGeneration}>Generate</button>\r\n            </div>\r\n        </DashboardContainer>\r\n    )\r\n}\r\n\r\nexport default Dashboard;","import styled from 'styled-components';\r\n\r\nexport const GraphsContainer = styled.div`\r\n    flex: 1 1 auto;\r\n    justify-self: flex-end;\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: flex-start;\r\n    align-items: stretch;\r\n\r\n    overflow: hidden;\r\n    overflow-x: scroll;\r\n\r\n    @media only screen and (max-width: 600px) {\r\n        flex-direction: column;\r\n        overflow: hidden;\r\n        overflow-y: scroll;\r\n    }\r\n\r\n    ::-webkit-scrollbar {\r\n        height: 5px;\r\n\r\n        @media only screen and (max-width: 600px) {\r\n            height: 0px;\r\n            width: 5px;\r\n        }\r\n    }\r\n\r\n    ::-webkit-scrollbar-track {\r\n        background-color: transparent;\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: var(--dark2);\r\n        border-radius: 10px;\r\n    }\r\n\r\n    .see-next {\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n\r\n        padding-left: 10px;\r\n        padding-right: 10px;\r\n        margin: 10px;\r\n        font-size: 60px;\r\n\r\n        color: var(--blue);\r\n        height: calc(100% - 20px);\r\n\r\n        transition: all 0.2s linear;\r\n\r\n        :hover {\r\n            transform: scale(1.2);\r\n        }\r\n\r\n        :active {\r\n            transform: scale(0.9);\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Graph = styled.div`\r\n    position: relative;\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: space-between;\r\n    align-items: stretch;\r\n    overflow: hidden;\r\n\r\n    margin: 10px;\r\n    padding: 10px;\r\n    border-radius: 20px;\r\n\r\n    @media only screen and (min-width: 600px) {\r\n        min-width: ${props => `${(props.widthC + 1)}em`};\r\n    }\r\n\r\n    @media only screen and (max-width: 600px) {\r\n        min-height: ${props => `${(props.heightC + 4)}em`};\r\n    }\r\n\r\n    font-size: ${props => `${props.surplue * 40}px`};\r\n    background-color: var(--dark3);\r\n    color: var(--white);\r\n\r\n    .centerer {\r\n        flex: 1 1 auto;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n    }\r\n\r\n    .inner-container {\r\n        position: relative;\r\n\r\n        height: ${props => `${(props.heightC + 1)}em`};\r\n        width: ${props => `${(props.widthC + 1)}em`};\r\n    }\r\n\r\n    .mask {\r\n        padding: 10px;\r\n        border-radius: 20px;\r\n        border-top-left-radius: 0px;\r\n        border-top-right-radius: 0px;\r\n\r\n        z-index: 2;\r\n\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n\r\n        font-size: 20px;\r\n        \r\n        p {\r\n            margin: 0px;\r\n            text-align: center;\r\n            background-color: var(--dark3);\r\n            padding: 5px;\r\n            border-radius: 10px;\r\n        }\r\n\r\n        .icons {\r\n            display: flex;\r\n            flex-direction: row;\r\n            justify-content: space-between;\r\n            align-items: center;\r\n            font-size: 40px;\r\n            background-color: var(--dark3);\r\n            padding: 5px;\r\n            border-radius: 10px;\r\n        }\r\n\r\n        .star-icon {\r\n            margin-right: 0;\r\n            color: var(--yellow);\r\n\r\n            transition: all 0.1s linear;\r\n\r\n            @media only screen and (min-width: 600px) {\r\n                :hover {\r\n                    transform: scale(1.1);\r\n                }\r\n            }\r\n\r\n            :active {\r\n                transform: scale(0.9);\r\n            }\r\n        }\r\n\r\n        .full-icon {\r\n            margin-right: 0.2em;\r\n            margin-left: 0.2em;\r\n\r\n            color: #ffffff22;\r\n            @media only screen and (max-width: 600px) {\r\n                color: var(--white);\r\n            }\r\n            \r\n            transition: all 0.1s linear;\r\n            \r\n            @media only screen and (min-width: 600px) {\r\n                :hover {\r\n                    transform: scale(1.1);\r\n                }\r\n            }\r\n\r\n            :active {\r\n                transform: scale(0.9);\r\n            }\r\n        }\r\n    }\r\n\r\n    @media only screen and (min-width: 600px) {\r\n            :hover .full-icon {\r\n                color: var(--white);\r\n            }\r\n        }\r\n`;\r\n\r\nexport const Character = styled.p`\r\n    cursor: pointer;\r\n    position: absolute;\r\n\r\n    top: ${props => (props.yPos + -props.yOffset) + \"em\"};\r\n    left: ${props => (props.xPos + -props.xOffset) + \"em\"};\r\n\r\n    width: 1em;\r\n    height: 1em;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    margin-block-start: 0;\r\n    margin-block-end: 0;\r\n    padding: 0px;\r\n\r\n    transition: all 2s ease;\r\n\r\n    :hover {\r\n        background-color: black;\r\n        transition: all 0.1s ease;\r\n        transform: scale(1.3);\r\n        text-decoration: line-through;\r\n        color: var(--red);\r\n    }\r\n\r\n`;","import React from 'react';\r\n\r\nimport { FaArrowRight, FaArrowLeft } from 'react-icons/fa';\r\nimport { AiOutlineStar, AiFillStar } from 'react-icons/ai';\r\nimport { MdFullscreen } from 'react-icons/md';\r\n\r\nimport {\r\n    GraphsContainer,\r\n    Graph,\r\n    Character\r\n} from './style';\r\n\r\nimport { AppContext } from '../../Contexts/AppContext';\r\n\r\nconst GraphOutput = () => {\r\n    const {\r\n        graphs, lastConfig, offsets, generateGraph,\r\n        addFavorite, removeFavorite, names, favorites\r\n    } = React.useContext(AppContext);\r\n    \r\n    // const [ graphStyles, setGraphStyles ] = React.useState([]);\r\n    // const [ applyRescale, setApplyRescale ] = React.useState(false);\r\n\r\n    const seeNextRef = React.useRef();\r\n    const seePrevRef = React.useRef();\r\n\r\n    // const graphContainerRef = React.useRef(Array(offsets.max).fill({\r\n    //     current: null,\r\n    //     style: {}\r\n    // }));\r\n    const graphsScrollRef = React.useRef();\r\n\r\n    React.useEffect(() => {\r\n        if (offsets.goSmooth && seeNextRef.current && seePrevRef.current)\r\n            (offsets.goSmooth === 1 ? seeNextRef : seePrevRef).current.scrollIntoView({\r\n                behavior: 'auto'\r\n            });\r\n    }, [offsets]);\r\n\r\n    // const rescaleGraphs = (recall) => {\r\n    //     console.log(\"heeelllllooooo\");\r\n    //     const containerHeight = graphsScrollRef.current.clientHeight;\r\n    //     graphContainerRef.current.forEach(value => {    \r\n    //         if (!value.current)\r\n    //             return;\r\n    //         if (value.current.clientHeight > containerHeight) {\r\n    //             const surplue = (containerHeight - 20) / value.current.clientHeight;\r\n    //             if (surplue < 1.0) {\r\n    //                 value.current.style.transform = `scale(${surplue})`;\r\n    //                 // value.style.minWidth = value.current.clientWidth - 100;\r\n    //                 // value.style.fontSize = value.style.fontSize;\r\n    //             }\r\n    //         }\r\n    //     });\r\n    //     // console.log(\"eirbhvefvezrv\");\r\n    //     if (!recall) {\r\n    //         setApplyRescale(prev => true);\r\n    //     }\r\n    // }\r\n\r\n    // React.useLayoutEffect(() => {\r\n    //     // console.log(\"last\");\r\n    //     rescaleGraphs(true);\r\n    // }, []);\r\n\r\n    // React.useEffect(() => {\r\n    //     window.addEventListener(\"resize\", rescaleGraphs);\r\n\r\n    //     return () => {\r\n    //         window.removeEventListener(\"resize\", rescaleGraphs);\r\n    //     }\r\n    // })\r\n\r\n    const getMinGraphs = () => {\r\n        const minGraphs = [];\r\n\r\n        for (let i = offsets.offset; i < graphs.length && i < offsets.offset + offsets.max; ++i) {\r\n            minGraphs.push({\r\n                graphId: i,\r\n                bookmarked: ~favorites.graphs.findIndex(value => value.stringifiedLetters === graphs[i].stringifiedLetters)\r\n            });\r\n        }\r\n        return minGraphs;\r\n    }\r\n\r\n    const favoriteGraph = (graphId, bookmarked) => {\r\n        if (bookmarked)\r\n            removeFavorite(graphs[graphId].id);\r\n        else\r\n            addFavorite(graphId);\r\n    }\r\n\r\n    return (\r\n        <GraphsContainer ref={graphsScrollRef}>\r\n            { offsets.offset > 0 &&\r\n                <div ref={seePrevRef} className=\"see-next\" onClick={() => generateGraph(names, -1)}>\r\n                    <FaArrowLeft />\r\n                </div>\r\n            }\r\n            {getMinGraphs().map(({graphId, bookmarked}, id) => (\r\n                <GraphElement\r\n                    key={graphs[graphId].id}\r\n                    graphs={graphs}\r\n                    graphId={graphId}\r\n                    bookmarked={bookmarked}\r\n                    scrollRef={graphsScrollRef}\r\n                    favoriteGraph={favoriteGraph}\r\n                />\r\n            ))}\r\n            { (graphs.length > offsets.offset + offsets.max || lastConfig) &&\r\n                <div ref={seeNextRef} className=\"see-next\" onClick={() => generateGraph(names, 1)}>\r\n                    <FaArrowRight />\r\n                </div>\r\n            }\r\n        </GraphsContainer>\r\n    );\r\n}\r\n\r\nconst GraphElement = ({graphs, graphId, bookmarked, scrollRef, favoriteGraph}) => {\r\n    const [ surplueValue, setSurplueValue ] = React.useState(0.0);\r\n    const graphRef = React.useRef();\r\n\r\n    const rescaleGraph = () => {\r\n        let axis, bigAxis;\r\n        if (window.innerWidth <= 600) {\r\n            axis = (graphs[graphId].width + 2) * 40;\r\n            bigAxis = scrollRef.current.clientWidth;\r\n        }\r\n        else {\r\n            axis = (graphs[graphId].height + 6) * 40;\r\n            bigAxis = scrollRef.current.clientHeight;\r\n        }\r\n\r\n        if (axis > bigAxis) {\r\n            const surplue = (bigAxis - 20) / axis;\r\n            if (surplue > 0.0)\r\n                setSurplueValue(surplue);\r\n        }\r\n    }\r\n\r\n    React.useEffect(() => {\r\n        rescaleGraph();\r\n\r\n        window.addEventListener(\"resize\", rescaleGraph);\r\n\r\n        return () => window.removeEventListener(\"resize\", rescaleGraph);\r\n    });\r\n\r\n    return (\r\n        <Graph\r\n            key={graphId}\r\n            widthC={graphs[graphId].width}\r\n            heightC={graphs[graphId].height}\r\n            surplue={surplueValue === 0 ? 1.0 : surplueValue}\r\n        >\r\n            <div className=\"centerer\">\r\n                <div\r\n                    ref={graphRef}\r\n                    className=\"inner-container\"\r\n                >\r\n                    {graphs[graphId].letters.map((letter, id) => (\r\n                        <Character\r\n                            key={id}\r\n                            xPos={letter.x}\r\n                            yPos={letter.y}\r\n                            xOffset={graphs[graphId].xOffset}\r\n                            yOffset={graphs[graphId].yOffset}\r\n                        >\r\n                            {letter.letter}\r\n                        </Character>\r\n                    ))}\r\n                </div>\r\n            </div>\r\n            <div className=\"mask\">\r\n                <p># {graphId}</p>\r\n                <div className=\"icons\">\r\n                    <MdFullscreen className=\"full-icon\" />\r\n                    { bookmarked\r\n                        ? <AiFillStar className=\"star-icon\" onClick={() => favoriteGraph(graphId, bookmarked)} />\r\n                        : <AiOutlineStar className=\"star-icon\" onClick={() => favoriteGraph(graphId, bookmarked)} />\r\n                    }\r\n                </div>\r\n            </div>\r\n        </Graph>\r\n    );\r\n}\r\n\r\nexport default GraphOutput;","import styled from 'styled-components';\r\n\r\nexport const BookmarksContainer = styled.div`\r\n\r\n    overflow: hidden;\r\n    overflow-y: scroll;\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 5px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: var(--dark2);\r\n        border-radius: 10px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-track {\r\n        background-color: transparent;\r\n    }\r\n\r\n    .names {\r\n        background-color: var(--dark3);\r\n        color: var(--white);\r\n\r\n        border-radius: 20px;\r\n        padding: 10px;\r\n\r\n        margin: 10px;\r\n    }\r\n\r\n    .name-info {\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: space-between;\r\n        align-items: center;\r\n\r\n        border-bottom: 2px solid rgba(0, 0, 0, 0.1);\r\n\r\n        padding-left: 10px;\r\n        padding-right: 10px;\r\n        \r\n        font-size: 20px;\r\n    }\r\n\r\n    .controls {\r\n        display: flex;\r\n        flex-direction: row;\r\n        align-items: center;\r\n\r\n        @media only screen and (max-width: 600px) {\r\n            flex-direction: column;\r\n        }\r\n\r\n        margin-left: 20px;\r\n\r\n        .icons {\r\n            display: flex;\r\n            flex-direction: row;\r\n        }\r\n\r\n        .graph-count {\r\n            white-space: nowrap;\r\n            margin: 0px;\r\n            font-size: 15px;\r\n        }\r\n\r\n        .see-eye, .clear-books {\r\n            font-size: 1.5em;\r\n            margin-left: 10px;\r\n        }\r\n\r\n        .see-eye {\r\n            color: var(--green);\r\n        }\r\n\r\n        .clear-books {\r\n            color: var(--red);\r\n        }\r\n    }\r\n\r\n    .name-list {\r\n        display: flex;\r\n        flex-direction: row;\r\n\r\n        overflow: hidden;\r\n        overflow-x: scroll;\r\n\r\n        ::-webkit-scrollbar {\r\n            height: 0px;\r\n        }\r\n\r\n        p {\r\n            margin-right: 5px;\r\n\r\n            /* padding: 5px; */\r\n            padding-left: 10px;\r\n            padding-right: 10px;\r\n            border-radius: 10px;\r\n\r\n            /* background-color: var(--dark); */\r\n        }\r\n    }\r\n\r\n    .graphs {\r\n        display: flex;\r\n        flex-direction: row;\r\n        /* justify-content: center; */\r\n\r\n        overflow: hidden;\r\n        overflow-x: scroll;\r\n\r\n        ::-webkit-scrollbar {\r\n            height: 5px;\r\n        }\r\n\r\n        ::-webkit-scrollbar-thumb {\r\n            background-color: var(--dark2);\r\n            border-radius: 10px;\r\n        }\r\n\r\n        ::-webkit-scrollbar-track {\r\n            background-color: transparent;\r\n        }\r\n    }\r\n`;\r\n\r\nexport const Graph = styled.div`\r\n    position: relative;\r\n    background-color: var(--blue);\r\n\r\n    margin: 20px;\r\n    padding: 1em;\r\n\r\n    border-radius: 10px;\r\n\r\n    z-index: 3;\r\n    /* overflow: hidden; */\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    .inner-container {\r\n        position: relative;\r\n\r\n        width: ${props => `${props.widthC + 1}em`};\r\n        height: ${props => `${props.heightC + 1}em`};\r\n\r\n        z-index: 1;\r\n    }\r\n\r\n    .mask {\r\n\r\n        position: absolute;\r\n        top: -0.5em;\r\n        bottom: -0.5em;\r\n        left: -0.5em;\r\n        right: -0.5em;\r\n\r\n        border-radius: 10px;\r\n\r\n        background-color: var(--yellow);\r\n        opacity: 0.7;\r\n\r\n        transform: scale(0);\r\n        transition: all 0.1s ease-in-out;\r\n\r\n        z-index: 2;\r\n    }\r\n\r\n    .inner-mask {\r\n        width: 100%;\r\n        height: 100%;\r\n\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: space-evenly;\r\n        align-items: center;\r\n\r\n        font-size: 40px;\r\n\r\n        .fullscreen {\r\n            color: var(--dark);\r\n        }\r\n\r\n        .remove {\r\n            color: var(--red);\r\n        }\r\n\r\n        .icon {\r\n            transition: all 0.1s ease-in-out;\r\n        }\r\n\r\n        .icon:hover {\r\n            transform: scale(1.1);\r\n        }\r\n\r\n        .icon:active {\r\n            transform: scale(0.9);\r\n        }\r\n    }\r\n\r\n    :hover .mask {\r\n        transform: scale(1.0);\r\n    }\r\n`;\r\n\r\nexport const Character = styled.p`\r\n    position: absolute;\r\n\r\n    top: ${props => (props.yPos + -props.yOffset) + \"em\"};\r\n    left: ${props => (props.xPos + -props.xOffset) + \"em\"};\r\n\r\n    width: 1em;\r\n    height: 1em;\r\n\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    margin-block-start: 0;\r\n    margin-block-end: 0;\r\n    padding: 0px;\r\n`;","import React from 'react';\r\nimport update from 'immutability-helper';\r\n\r\nimport { MdFullscreen } from 'react-icons/md';\r\nimport { CgClose } from 'react-icons/cg';\r\nimport { AiFillEyeInvisible, AiFillEye } from 'react-icons/ai';\r\n\r\nimport {\r\n    BookmarksContainer,\r\n    Graph,\r\n    Character\r\n} from './style';\r\n\r\nimport { AppContext } from '../../Contexts/AppContext';\r\n\r\nconst Bookmarks = () => {\r\n    const { favorites, removeFavorite, setFavorites } = React.useContext(AppContext);\r\n\r\n    const deleteFavorite = (graphId) => {\r\n        removeFavorite(graphId);\r\n    }\r\n\r\n    return (\r\n        <BookmarksContainer>\r\n            {favorites.names.map((names, id) => {\r\n                const namesArr = JSON.parse(names.names);\r\n                const graphs = favorites.graphs.filter(value => value.names === names.names);\r\n\r\n                const ShowEyeTag = names.show ? AiFillEye : AiFillEyeInvisible;\r\n\r\n                const handleShow = () => {\r\n                    setFavorites(prev => update(prev, {\r\n                        names: {\r\n                            [id]: {\r\n                                show: {\r\n                                    $set: !names.show\r\n                                }\r\n                            }\r\n                        }\r\n                    }));\r\n                }\r\n\r\n                const clearFavs = () => {\r\n                    setFavorites(prev => ({\r\n                        names: prev.names.filter((v, id2) => id2 !== id),\r\n                        graphs: prev.graphs.filter(value => value.names !== names.names)\r\n                    }));\r\n                }\r\n\r\n                return (\r\n                    <div key={id} className=\"names\">\r\n                        <div className=\"name-info\">\r\n                            <div className=\"name-list\">\r\n                                {namesArr.map((name, id) => (\r\n                                    <p key={id}>{name}</p>\r\n                                ))}\r\n                            </div>\r\n                            <div className=\"controls\">\r\n                                <p className=\"graph-count\">{graphs.length} element(s)</p>\r\n                                <div className=\"icons\">\r\n                                    <ShowEyeTag className=\"see-eye\" onClick={handleShow} />\r\n                                    <CgClose className=\"clear-books\" onClick={clearFavs} />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"graphs\">\r\n                            {names.show && graphs.map((graph, id) => (\r\n                                    <Graph\r\n                                        key={id}\r\n                                        widthC={graph.width}\r\n                                        heightC={graph.height}\r\n                                    >\r\n                                        <div className=\"inner-container\">\r\n                                            {graph.letters.map((letter, id) => (\r\n                                                <Character\r\n                                                    key={id}\r\n                                                    xPos={letter.x}\r\n                                                    yPos={letter.y}\r\n                                                    xOffset={graph.xOffset}\r\n                                                    yOffset={graph.yOffset}\r\n                                                >\r\n                                                    {letter.letter}\r\n                                                </Character>\r\n                                            ))}\r\n                                        </div>\r\n                                        <div className=\"mask\">\r\n                                            <div className=\"inner-mask\">\r\n                                                <MdFullscreen className=\"icon fullscreen\" />\r\n                                                <CgClose className=\"icon remove\" onClick={() => deleteFavorite(graph.id)} />\r\n                                            </div>\r\n                                        </div>\r\n                                    </Graph>\r\n                                )\r\n                            )}\r\n                        </div>\r\n                    </div>\r\n                );\r\n            })}\r\n        </BookmarksContainer>\r\n    );\r\n}\r\n\r\nexport default Bookmarks;","import styled from 'styled-components';\r\n\r\nexport const HomepageContainer = styled.div`\r\n    color: var(--white);\r\n    font-size: 40px;\r\n\r\n    height: 100%;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n    overflow: hidden;\r\n    overflow-y: scroll;\r\n\r\n    ::-webkit-scrollbar {\r\n        width: 5px;\r\n    }\r\n\r\n    ::-webkit-scrollbar-track {\r\n        background-color: transparent;\r\n    }\r\n\r\n    ::-webkit-scrollbar-thumb {\r\n        background-color: var(--dark2);\r\n        border-radius: 10px;\r\n    }\r\n\r\n    .a {\r\n        background-color: var(--pink);\r\n    }\r\n\r\n    .b {\r\n        background-color: var(--blue);\r\n    }\r\n\r\n    .c {\r\n        background-color: var(--red);\r\n    }\r\n\r\n    .d {\r\n        background-color: var(--green);\r\n    }\r\n\r\n    .e {\r\n        background-color: var(--yellow);\r\n        color: black;\r\n    }\r\n\r\n    .l {\r\n        display: inline-block;\r\n\r\n        transition: all 0.1s ease-in-out;\r\n    }\r\n\r\n    .l:hover {\r\n        transform: scaleY(0.8) scaleX(0.9);\r\n    }\r\n\r\n    .l:active {\r\n        transform: scaleY(1.2) scaleX(0.5);\r\n    }\r\n`; ","import React from 'react';\r\n\r\nimport {\r\n    HomepageContainer\r\n} from './style.js';\r\n\r\nconst Homepage = () => {\r\n    return (\r\n        <HomepageContainer>\r\n            <p>\r\n                <p className=\"l a\">WordCross</p> is a word crossing <span className=\"l b\">generator</span>.<br/>\r\n            </p>\r\n            <p>\r\n                You give him a list of <span className=\"l c\">words</span> as input, and it will try to cross each <span className=\"l c\">words</span> on each <span className=\"l c\">words</span> and returns all the <span className=\"l d\">possibilites</span> back to you.\r\n            </p>\r\n        </HomepageContainer>\r\n\r\n    );\r\n}\r\n\r\nexport default Homepage;","import styled from 'styled-components';\r\n\r\nexport const SettingsContainer = styled.div`\r\n    z-index: 1000;\r\n\r\n    position: absolute;\r\n    top: 0px;\r\n    bottom: 0px;\r\n    left: 0px; \r\n    right: 0px;\r\n\r\n    display: flex;\r\n    flex-direction: row;\r\n    justify-content: center;\r\n    align-items: center;\r\n\r\n    .mask {\r\n        position: absolute;\r\n        top: 0px;\r\n        bottom: 0px;\r\n        left: 0px; \r\n        right: 0px;\r\n\r\n        background-color: rgba(0, 0, 0, 0.7);\r\n    }\r\n`;\r\n\r\nexport const Menu = styled.div`\r\n    position: absolute;\r\n\r\n    background-color: var(--dark);\r\n\r\n    @media only screen and (min-width: 600px) {\r\n        height: 70%;\r\n        width: 70%;\r\n        border-radius: 10px;\r\n    }\r\n\r\n    @media only screen and (max-width: 600px) {\r\n        top: 0px;\r\n        bottom: 0px;\r\n        left: 0px;\r\n        right: 0px;\r\n        background-color: rgba(0, 0, 0, 0.2);\r\n        backdrop-filter: blur(20px);\r\n    }\r\n\r\n    padding: 10px;\r\n\r\n    color: var(--white);\r\n\r\n    font-size: 25px;\r\n\r\n    display: flex;\r\n    flex-direction: column;\r\n\r\n    .header {\r\n        flex: 0 1 auto;\r\n        border-bottom: 2px rgba(0, 0, 0, 0.3) solid;\r\n        padding: 10px;\r\n\r\n        display: flex;\r\n        flex-direction: row;\r\n        justify-content: flex-end;\r\n        align-items: center;\r\n    }\r\n\r\n    .title {\r\n        cursor: auto;\r\n        flex: 1 1 auto;\r\n\r\n        display: flex;\r\n        justify-content: center;\r\n    }\r\n\r\n    .close-icon {\r\n        flex: 0 1 auto;\r\n        font-size: 30px;\r\n\r\n        cursor: pointer;\r\n\r\n        transition: all 0.1s linear;\r\n\r\n        :hover {\r\n            transform: scaleX(1.5) scaleY(0.9);\r\n        }\r\n\r\n        :active {\r\n            transform: scaleY(1.5);\r\n        }\r\n    }\r\n\r\n    .body {\r\n        flex: 1 1 auto;\r\n\r\n        overflow: hidden;\r\n        overflow-y: scroll;\r\n        margin: 10px;\r\n\r\n        ::-webkit-scrollbar {\r\n            width: 5px;\r\n        }\r\n\r\n        ::-webkit-scrollbar-thumb {\r\n            background-color: var(--dark2);\r\n            border-radius: 10px;\r\n        }\r\n\r\n        ::-webkit-scrollbar-track {\r\n            background-color: transparent;\r\n        }\r\n    }\r\n\r\n    .group {\r\n\r\n        .group-title {\r\n            font-size: 20px;\r\n\r\n            color: var(--dark2);\r\n            opacity: 0.9;\r\n        }\r\n\r\n        .group-settings {\r\n            margin: 10px;\r\n\r\n            font-size: 20px;\r\n\r\n            .setting {\r\n                display: flex;\r\n                flex-direction: row;\r\n                justify-content: space-between;\r\n                align-items: center;\r\n\r\n                .descr {\r\n                    margin: 0px;\r\n                    margin-right: 10px;\r\n                }\r\n\r\n                .input {\r\n                    padding: 5px;\r\n                    margin: 0px;\r\n\r\n                    text-align: center;\r\n\r\n                    background-color: var(--dark2);\r\n                    border: none;\r\n                    outline: none;\r\n\r\n                    color: white;\r\n\r\n                    font-family: inherit;\r\n                    font-size: inherit;\r\n\r\n                    ::-webkit-inner-spin-button {\r\n                        appearance: none;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    .apply {\r\n        font-family: inherit;\r\n\r\n        font-size: 25px;\r\n        background-color: var(--blue);\r\n        border: none;\r\n        outline: none;\r\n        color: var(--white);\r\n        padding: 5px;\r\n        margin: 10px;\r\n        border-radius: 10px;\r\n\r\n        transition: all 0.1s cubic-bezier(0.47, 0, 0.745, 0.715);\r\n\r\n        @media only screen and (min-width: 600px) {\r\n            :hover {\r\n                transform: scale(0.98);\r\n            }\r\n        }\r\n\r\n        :active {\r\n            transform: scale(1.05);\r\n        }\r\n    }\r\n`;","import React from 'react';\r\nimport update from 'immutability-helper';\r\n\r\nimport { CgClose } from 'react-icons/cg';\r\nimport { AppContext } from '../../Contexts/AppContext';\r\n\r\nimport {\r\n    SettingsContainer,\r\n    Menu\r\n} from './style';\r\n\r\nconst Settings = ({onClick}) => {\r\n    const { offsets, setOffsets } = React.useContext(AppContext);\r\n    const allContext = React.useContext(AppContext);\r\n\r\n    const graphLimitRef = React.useRef();\r\n\r\n    const applyChanges = () => {\r\n        if (graphLimitRef.current.value !== offsets.max && graphLimitRef.current.value >= 5) {\r\n            setOffsets(prev => update(prev, {\r\n                max: { $set: graphLimitRef.current.value - 0 }\r\n            }))\r\n        }\r\n    }\r\n\r\n    const clearCache = () => {\r\n        allContext.setNames([]);\r\n        allContext.setGraphs([]);\r\n        allContext.setOffsets(prev => ({\r\n            offset: 0,\r\n            max: prev.max,\r\n            goSmooth: 0\r\n        }));\r\n        allContext.setLastConfig(null);\r\n        allContext.setFavorites({\r\n            names: [],\r\n            graphs: []\r\n        });\r\n    }\r\n\r\n    return (\r\n        <SettingsContainer>\r\n            <div className=\"mask\" onClick={onClick} />\r\n            <Menu>\r\n                <div className=\"header\">\r\n                    <p className=\"title\">Settings</p>\r\n                    <CgClose className=\"close-icon\" onClick={onClick} />\r\n                </div>\r\n                <div className=\"body\">\r\n                    <div className=\"group\">\r\n                        <p className=\"group-title\">Generator Output</p>\r\n                        <div className=\"group-settings\">\r\n                            <div className=\"setting graph-limit\">\r\n                                <p className=\"descr\">Maximum number of graphs to be shown (5{'>'}10000)</p>\r\n                                <input ref={graphLimitRef} className=\"input\" type=\"number\" defaultValue={offsets.max} min=\"5\" max=\"10000\" />\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"group\">\r\n                        <p className=\"group-title\">Memory</p>\r\n                        <div className=\"group-settings\">\r\n                            <div className=\"setting clear-cache\">\r\n                                <button className=\"input\" onClick={clearCache}>Clear cache</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <button className=\"apply\" onClick={applyChanges}>Apply Changes</button>\r\n            </Menu>\r\n        </SettingsContainer>  \r\n    );\r\n}\r\n\r\nexport default Settings;","import styled from 'styled-components';\r\n\r\nexport const HamMenuContainer = styled.div`\r\n    z-index: 1000;\r\n\r\n    position: absolute;\r\n    top: 0px;\r\n    bottom: 0px;\r\n    left: 0px;\r\n    right: 0px;\r\n\r\n    font-weight: bold;\r\n\r\n    background-color: rgba(0, 0, 0, 0.7);\r\n    backdrop-filter: blur(5px);\r\n\r\n    .dropped {\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: flex-start;\r\n        align-items: center;\r\n\r\n        background-color: var(--dark);\r\n\r\n        padding: 30px;\r\n        padding-top: 10px;\r\n\r\n        border-bottom-left-radius: 20px;\r\n        border-bottom-right-radius: 20px;\r\n    }\r\n\r\n\r\n    .close-icon {\r\n        /* flex: 0 1 auto; */\r\n        cursor: pointer;\r\n        align-self: flex-end;\r\n        font-size: 30px;\r\n    }\r\n\r\n    .body {\r\n        /* flex: 1 1 auto; */\r\n        display: flex;\r\n        flex-direction: column;\r\n        justify-content: flex-start;\r\n        /* align-items: center; */\r\n    }\r\n\r\n    .icon {\r\n        cursor: pointer;\r\n        font-size: 30px;\r\n        text-align: center;\r\n        border-radius: 10px;\r\n        padding: 10px;\r\n        margin: 10px;\r\n    }\r\n\r\n    .selected {\r\n        background-color: var(--white);\r\n        color: var(--dark);\r\n        box-shadow: 0px -5px 0px var(--blue) inset;\r\n    }\r\n`;","import React from 'react';\r\n\r\nimport { CgClose } from 'react-icons/cg';\r\n\r\nimport {\r\n    HamMenuContainer\r\n} from './style';\r\n\r\nconst HamMenu = ({onClose, menuState, menuClick, setShowSettings}) => {\r\n    return (\r\n        <HamMenuContainer>\r\n            <div className=\"dropped\">\r\n                <CgClose className=\"close-icon\" onClick={onClose} />\r\n                <div className=\"body\">\r\n                    {menuState.menus.map((menu, id) => (\r\n                        (menu.showMenu || menu.showMenu === undefined) && <p\r\n                            key={id}\r\n                            className={`icon ${menu.name} ${id === menuState.current ? \"selected\" : null}`}\r\n                            onClick={() => menuClick(menu.name)}\r\n                        >\r\n                            {menu.name}\r\n                        </p>\r\n                    ))}\r\n                    <p className=\"icon\" onClick={setShowSettings}>Settings</p>\r\n                </div>\r\n            </div>\r\n        </HamMenuContainer>\r\n    );\r\n}\r\n\r\nexport default HamMenu;","import React from 'react';\r\n\r\nimport { HiMenuAlt4 } from 'react-icons/hi';\r\nimport { RiSettings3Fill } from 'react-icons/ri';\r\n\r\nimport { AppProvider } from '../../Contexts/AppContext';\r\n\r\nimport {\r\n    AppContainer,\r\n} from './style';\r\n\r\nimport Dashboard from '../Dashboard';\r\nimport GraphOutput from '../GraphOutput';\r\nimport Bookmarks from '../Bookmarks';\r\nimport Homepage from '../Homepage';\r\nimport Settings from '../Settings';\r\nimport HamMenu from '../HamMenu';\r\n\r\nconst App = () => (\r\n    <AppProvider>\r\n        <InnerApp />\r\n    </AppProvider>\r\n);\r\n\r\nconst InnerApp = () => {\r\n\r\n    const [ showSettings, setShowSettings ] = React.useState(false);\r\n    const [ showHamMenu, setShowHamMenu ] = React.useState(false);\r\n    const [ menuState, setMenuState ] = React.useState({\r\n        current: 2,\r\n        menus: [\r\n            {\r\n                name: \"Generator\",\r\n                component: (\r\n                    // <div className=\"mobile-scrollable\">\r\n                    <>\r\n                        <Dashboard />\r\n                        <GraphOutput />\r\n                    </>\r\n                    // </div>\r\n                )\r\n            }, { \r\n                name: \"Bookmarks\",\r\n                component: (\r\n                    <Bookmarks/>\r\n                ) \r\n            }, {\r\n                name: \"Homepage\",\r\n                showMenu: false,\r\n                component: (\r\n                    <Homepage />\r\n                )\r\n            }\r\n        ]\r\n    });\r\n\r\n    const menuClick = (name) => {\r\n        const id = menuState.menus.findIndex(value => value.name === name);\r\n\r\n        setShowHamMenu(false);\r\n        if (menuState.current === id)\r\n            return;\r\n        \r\n        setMenuState(prev => ({\r\n            current: id,\r\n            menus: prev.menus\r\n        }));\r\n    }\r\n\r\n    return (\r\n        <AppContainer>\r\n            <div className=\"title-container\">\r\n                <p\r\n                    className=\"title\"\r\n                    onClick={() => menuClick(\"Homepage\")}\r\n                >\r\n                    WordCross\r\n                </p>\r\n                <div className=\"menu-selector\">\r\n                    {menuState.menus.map((menu, id) => (\r\n                        (menu.showMenu || menu.showMenu === undefined) && <p\r\n                            key={id}\r\n                            className={`icon ${menu.name} ${id === menuState.current ? \"selected\" : null}`}\r\n                            onClick={() => menuClick(menu.name)}\r\n                        >\r\n                            {menu.name}\r\n                        </p>\r\n                    ))}\r\n                    <RiSettings3Fill\r\n                        className=\"settings\"\r\n                        onClick={() => setShowSettings(true)}\r\n                    />\r\n                </div>\r\n                <div className=\"menu-hamburger\">\r\n                    <HiMenuAlt4\r\n                        className=\"ham-icon\"\r\n                        onClick={() => setShowHamMenu(true)}\r\n                    />\r\n                    { showHamMenu &&\r\n                        <HamMenu\r\n                            onClose={() => setShowHamMenu(false)}\r\n                            menuState={menuState}\r\n                            menuClick={menuClick}\r\n                            setShowSettings={() => {\r\n                                setShowSettings(true);\r\n                                setShowHamMenu(false);\r\n                            }}\r\n                        />\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div className=\"padded\">\r\n                {menuState.menus[menuState.current].component}\r\n            </div>\r\n            { showSettings &&\r\n                <Settings \r\n                    onClick={() => setShowSettings(false)}\r\n                />\r\n            }\r\n        </AppContainer>\r\n    )\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './Components/App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);"],"sourceRoot":""}